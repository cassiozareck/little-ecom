openapi: 3.0.0
info:
  version: "1.0.0"
  title: E-Commerce API
servers:
  - url: 'http://192.168.49.2/'
paths:
  /item/{id}:
    delete:
      summary: Remove an item by ID
      tags:
        - Items
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id
          in: path
          description: Item's unique ID
          required: true
          schema:
            type: string
            format: objectId  # Assuming the ID format is MongoDB's ObjectID
      responses:
        '200':
          description: Successfully deleted the item.
        '400':
          description: Invalid ID format.
        '404':
          description: No item found to delete.
        '500':
          description: Error deleting item.
    put:
      summary: Update an item by ID
      tags:
        - Items
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id
          in: path
          description: Item's unique ID to update
          required: true
          schema:
            type: string
            format: objectId
      requestBody:
        description: Updated item data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '200':
          description: Successfully updated the item.
        '400':
          description: Invalid ID format or Bad Input.
        '500':
          description: Update Failed or Internal Server Error.
    get:
      summary: Retrieve an item by its ID
      tags:
        - Items
      parameters:
        - name: id
          in: path
          description: Unique ID of the item to retrieve
          required: true
          schema:
            type: string
            format: objectId
      responses:
        '200':
          description: An item successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '400':
          description: Invalid ID format.
        '404':
          description: Item not found.
        '500':
          description: Failed to send response or internal server error.

  /items/{owner}:
    get:
      security:
        - bearerAuth: [ ]
      summary: Retrieve all items owned by a specific user
      tags:
        - Items
      parameters:
        - name: owner
          in: path
          description: Owner's username identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of items successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
        '400':
          description: Invalid owner format.
        '500':
          description: Failed to retrieve items or internal server error.

  /item:
    post:
      security:
        - bearerAuth: [ ]  # Use the bearerAuth security scheme defined below
      summary: Add a new item
      tags:
        - Items
      requestBody:
        description: The item to be added, without the id
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemWithoutID'

      responses:
        '200':
          description: Item added successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad Request (invalid input or JSON decoding failed).
        '500':
          description: Internal Server Error or failed to save to DB.
  /items:
    get:
      summary: Retrieve a list of items
      tags:
        - Items
      responses:
        '200':
          description: A list of items successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
        '500':
          description: Failed to retrieve items or internal server error.

  /buy/{id}:
    put:
      summary: Buy an item by ID
      tags:
        - Items
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id
          in: path
          description: Item's unique ID to buy
          required: true
          schema:
            type: string
            format: objectId
      responses:
        '200':
          description: Successfully bought the item.
        '400':
          description: Invalid ID format or Bad Input.
        '500':
          description: Update Failed or Internal Server Error.

  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid request
        '500':
          description: Server error

  /auth/signin:
    post:
      tags:
        - Authentication
      summary: Sign in an existing user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Sign in successful, returns JWT token
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Unauthorized - Invalid credentials
        '400':
          description: Bad request
        '500':
          description: Server error

  /auth/validate:
    post:
      tags:
        - Authentication
      summary: Validate JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
      responses:
        '200':
          description: Token is valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                  exp:
                    type: number
                    format: float
        '401':
          description: Unauthorized - Invalid token
        '400':
          description: Bad request
        '500':
          description: Server error


components:
  securitySchemes:
    bearerAuth: # Arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Item:
      type: object
      properties:
        id:
          type: string
          format: objectId
        owner:
          type: string
        name:
          type: string
        price:
          type: number
    ItemWithoutID:
      type: object
      properties:
        name:
          type: string
        owner:
          type: string
          format: objectId
        price:
          type: number