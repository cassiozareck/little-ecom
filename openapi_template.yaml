swagger: '2.0'
info:
  version: "1.0.0"
  title: E-Commerce API
host: '192.168.49.2'
schemes:
  - http
basePath: '/'
paths:
  /items/{id}:
    delete:
      summary: Remove an item by ID
      tags:
        - Items
      parameters:
        - name: id
          in: path
          description: Item's unique ID
          required: true
          type: string
          format: objectId
      responses:
        '200':
          description: Successfully deleted the item.
        '400':
          description: Invalid ID format.
        '404':
          description: No item found to delete.
        '500':
          description: Error deleting item.
    post:
      summary: Add a new item
      tags:
        - Items
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: The item to be added, without the id
          required: true
          schema:
            $ref: '#/definitions/ItemWithoutID'
      responses:
        '200':
          description: Item added successfully.
          schema:
            type: object
            properties:
              message:
                type: string
        '400':
          description: Bad Request (invalid input or JSON decoding failed).
        '500':
          description: Internal Server Error or failed to save to DB.
    put:
      summary: Update an item by ID
      tags:
        - Items
      parameters:
        - name: id
          in: path
          description: Item's unique ID to update
          required: true
          type: string
          format: objectId
        - in: body
          name: body
          description: Updated item data
          required: true
          schema:
            $ref: '#/definitions/Item'
      responses:
        '200':
          description: Successfully updated the item.
        '400':
          description: Invalid ID format or Bad Input.
        '500':
          description: Update Failed or Internal Server Error.
    get:
      summary: Retrieve an item by its ID
      tags:
        - Items
      parameters:
        - name: id
          in: path
          description: Unique ID of the item to retrieve
          required: true
          type: string
          format: objectId
      responses:
        '200':
          description: An item successfully retrieved.
          schema:
            $ref: '#/definitions/Item'
        '400':
          description: Invalid ID format.
        '404':
          description: Item not found.
        '500':
          description: Failed to send response or internal server error.

  /items:
    get:
      summary: Retrieve a list of items
      tags:
        - Items
      responses:
        '200':
          description: A list of items successfully retrieved.
          schema:
            type: array
            items:
              $ref: '#/definitions/Item'
        '500':
          description: Failed to retrieve items or internal server error.

definitions:
  Item:
    type: object
    properties:
      id:
        type: string
        format: objectId
      name:
        type: string
      price:
        type: number
  ItemWithoutID:
    type: object
    properties:
      name:
        type: string
      price:
        type: number
