apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth
  labels:
    app: auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: Auth
  template:
    metadata:
      name: Auth
      labels:
        app: Auth
    spec:
      containers:
        - name: auth
          image: Image
          imagePullPolicy: Always
          envFrom:
            - secretRef:
                name: auth-secret
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: db_url

        - name: postgres
          image: postgres
          envFrom:
            - secretRef:
                name: db-credentials
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: auth-pvc
      - name: init-script
        configMap:
          name: db-init-script
      restartPolicy: Always

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: auth-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  storageClassName: "standard"

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: "auth-volume"
spec:
  accessModes:
    - ReadWriteMany
  capacity:
    storage: 5Gi
    storageClassName: "standard"
---
apiVersion: v1
kind: Secret
metadata:
  name: db-credentials
type: Opaque
data:
  db_user: auth-admin
  db_password: 123123
